limit_req_zone $binary_remote_addr zone=api_zone:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=static_zone:10m rate=100r/s;

server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;

    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsecurity/main.conf;

    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    root /usr/share/nginx/html;
    index index.html;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:;" always;

    location / {
        try_files $uri $uri/ /index.html;

        modsecurity_rules '
            SecRule REQUEST_METHOD "POST|PUT|DELETE" "id:3000,phase:1,deny,status:405,log,msg:\"Dangerous method on frontend\""
        ';
    }

    location /api/ {
        proxy_pass https://api-gateway:3000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        modsecurity_rules 'SecRule ARGS "@validateByteRange 32-126" "id:3001,phase:2,deny,status:400,log,msg:\"Non-ASCII characters in API request\""';
        
        limit_req zone=api_zone burst=20 nodelay;
    }

    location /avatars/ {
        proxy_pass https://api-gateway:3000/avatars/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # FIXED: Single line rule
        modsecurity_rules 'SecRuleEngine DetectionOnly';
        
        limit_req zone=static_zone burst=50 nodelay;
    }

    location /api/pong/wss {
        proxy_pass https://pong-service:3003/wss;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_ssl_verify off;
        
        # FIXED: Single line rule
        modsecurity_rules 'SecRuleEngine DetectionOnly';
    }

    location /api/pong/ws {
        proxy_pass https://pong-service:3003/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_ssl_verify off;
        
        # FIXED: Single line rule
        modsecurity_rules 'SecRuleEngine DetectionOnly';
    }
    
    location /health {
        modsecurity off;
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    location /modsec-audit-log {
        modsecurity off;
        alias /var/log/nginx/modsec_audit.log;
        add_header Content-Type text/plain;
        
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        allow 192.168.0.0/16;
        deny all;
    }
}


# server {
#     listen 80;
#     server_name localhost;
#     return 301 https://$host$request_uri;
# }

# server {
#     listen 443 ssl;
#     server_name localhost;

#     ssl_certificate /etc/nginx/certs/server.crt;
#     ssl_certificate_key /etc/nginx/certs/server.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;

#     root /usr/share/nginx/html;
#     index index.html;

#     location / {
#         try_files $uri $uri/ /index.html;
#     }

#     location /api/ {
#         proxy_pass https://api-gateway:3000/api/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     location /avatars/ {
#         proxy_pass https://api-gateway:3000/avatars/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     location /api/pong/wss {
#         proxy_pass https://pong-service:3003/wss;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         proxy_ssl_verify off;
#     }

#     location /api/pong/ws {
#         proxy_pass https://pong-service:3003/ws;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         proxy_ssl_verify off;
#     }
    
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
# }
